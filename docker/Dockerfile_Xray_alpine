# 第一阶段：下载和准备文件
FROM alpine:latest AS builder
WORKDIR /tmp
# 下载 Xray 和 dat 文件
RUN apk add --no-cache curl unzip && \
    curl -s https://api.github.com/repos/XTLS/Xray-core/releases | grep "browser_download_url.*Xray-linux-64.zip" | cut -d '"' -f 4 | xargs curl -L -o xray.zip && \
    unzip -j xray.zip "xray" && \
    mv xray xray-x && \
    rm xray.zip && \
    curl -s https://api.github.com/repos/Loyalsoldier/v2ray-rules-dat/releases/latest | grep "browser_download_url.*geoip.dat" | cut -d '"' -f 4 | xargs curl -L -o geoip.dat && \
    curl -s https://api.github.com/repos/Loyalsoldier/v2ray-rules-dat/releases/latest | grep "browser_download_url.*geosite.dat" | cut -d '"' -f 4 | xargs curl -L -o geosite.dat

# 第二阶段：构建最终镜像
FROM alpine:latest
LABEL maintainer="snowdream <Jianfei@hub.cn.com>"

# 更新软件源
RUN echo "http://dl-cdn.alpinelinux.org/alpine/latest-stable/main" > /etc/apk/repositories && \
    echo "http://dl-cdn.alpinelinux.org/alpine/edge/community" >> /etc/apk/repositories  && \
    echo "https://dl-cdn.alpinelinux.org/alpine/latest-stable/community" >> /etc/apk/repositories

# 设置时区并安装必要的包
RUN apk update && \
    apk add --no-cache tzdata python3 py3-watchdog py3-pip bash iproute2 inotify-tools && \
    cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && \
    echo "Asia/Shanghai" > /etc/timezone && \
    apk del tzdata && \
    rm -rf /var/cache/apk/*

# 创建工作目录
WORKDIR /app

# 从builder阶段复制文件
COPY --from=builder /tmp/xray-x /app/
COPY --from=builder /tmp/geoip.dat /app/
COPY --from=builder /tmp/geosite.dat /app/
COPY ./docker/xray.py /app/

# 设置权限
RUN chmod +x /app/xray-x /app/xray.py

# 设置环境变量
ENV CONFIG_DIR="/app/config" \
    XRAY_EXEC="/app/xray-x" \
    PID_FILE="/app/xray.pid" \
    PATH="/app:${PATH}"

# 运行 Python 脚本
CMD ["xray.py"]
