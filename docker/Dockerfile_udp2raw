# 构建阶段
FROM python:3.12-alpine AS builder

# 安装构建依赖
RUN apk add --no-cache --virtual .build-deps curl tar gcc musl-dev linux-headers libffi-dev openssl-dev

# 创建 /build 目录并切换到该目录
WORKDIR /build

# 下载和解压 udp2raw
RUN curl -s https://api.github.com/repos/wangyu-/udp2raw/releases | \
    grep -o '"browser_download_url": *"[^"]*' | \
    grep -o 'https://.*' | \
    head -n 1 | \
    xargs -I {} curl -L -o udp2raw.tar.gz {} && \
    tar --transform='s/udp2raw_amd64/udp2raw/' -xzf udp2raw.tar.gz udp2raw_amd64

# 复制 Python 脚本到 /build 目录
COPY ./udp2raw.py /build/udp_tcp.py

# 安装 PyInstaller 并打包 Python 脚本
RUN pip install psutil watchdog pyinstaller && \
    pyinstaller --onefile --strip --distpath /build/dist /build/udp_tcp.py

# ----------------------------------------------------------------------------------

# 最终镜像
FROM alpine:latest

RUN apk add --no-cache iptables libstdc++ tzdata iproute2 && \
    cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && \
    echo "Asia/Shanghai" > /etc/timezone && \
    apk del tzdata && \
    rm -rf /var/cache/apk/*

# 复制 udp2raw 和打包后的 Python 脚本
COPY --from=builder /build/udp2raw /usr/local/bin/
COPY --from=builder /build/dist/udp_tcp /usr/local/bin/

# 设置可执行权限
RUN chmod +x /usr/local/bin/udp2raw /usr/local/bin/udp_tcp

# 创建所需目录和卷
ENV PATH="/usr/local/bin:${PATH}"
WORKDIR /app
VOLUME ["/app"]

# 设置简化后的入口点
ENTRYPOINT ["udp_tcp"]

# docker build --no-cache --progress=plain -t jianfeii/udp2raw .
# docker run -d --name udp2raw --network host -v /etc/udp2raw/config:/etc/udp2raw --restart always udp2raw
# 将额外文件打包进单一可执行文件
# pyinstaller --onefile main.py \
#     --add-data "static/index.html:static" \
#    --add-data "static/style.css:static" \
#     --add-data "static/script.js:static" \
#     --add-data "binaries/tool.bin:binaries"

